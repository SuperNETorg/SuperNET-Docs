{"agent":"bitcoinrpc","method":"signrawtransaction","rawtx":"The transaction to sign as a serialized transaction.","vins":"txid: The TXID of the transaction the output appeared in. The TXID must be encoded in hex in RPC byte order. vout: The index number of the output (vout) as it appeared in its transaction, with the first output being 0. scriptPubKey: The output’s pubkey script encoded as hex.","privkeys":"A private key in base58check format to use to create a signature for this transaction.","sighash":"The type of signature hash to use for all of the signatures performed. (You must use separate calls to the signrawtransaction RPC if you want to use different signature hash types for different signatures. The allowed values are: ALL, NONE, SINGLE, ALL|ANYONECANPAY, NONE|ANYONECANPAY, and SINGLE|ANYONECANPAY.","help":"The signrawtransaction RPC signs a transaction in the serialized transaction format using private keys stored in the wallet or provided in the call.\n\n Parameter #1—the transaction to sign. \n\n Parameter #2—unspent transaction output details. \n\n Parameter #3—private keys for signing. \n\n Parameter #4—signature hash type. \n\n Result—the transaction with any signatures made.","teststatus":[{"tester":"bob","result":"put result here","notes":"put useful notes here","automated":"notyet","sourcefile":"bitcoinrpc_signrawtransaction_test.py"}]}
